@font-face{font-family:'Gilroy';src:url(../fonts/Gilroy-Regular.ttf)}@font-face{font-family:'Galien';src:url(../fonts/Galien-Regular.ttf)}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus{outline:0}.container{margin:0 auto;overflow:hidden;min-width:250px;position:relative;font-family:Gilroy}ul{list-style:none}a{text-decoration:none;color:inherit;-webkit-transition:.2s;transition:.2s}h1,h2,h3,h4,ul{margin:0;padding:0}.container,main .main__bg,svg{width:100%;height:100%}.wrapper{max-width:940px;margin:0 auto}.nav__burger,header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.nav__burger{width:24px;height:16px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.nav__burger span{display:block;height:3px;background:#356ead}header{max-width:1366px;margin:48px auto 0}.header__logo{width:48px;height:48px}.header__logo,.header__nav{cursor:pointer}main{padding-bottom:50px;position:relative}main .main__bg{background:-webkit-gradient(linear,left bottom,left top,color-stop(8.84%,#98c3e8),color-stop(31.12%,rgba(152,195,232,0)));background:linear-gradient(0deg,#98c3e8 8.84%,rgba(152,195,232,0) 31.12%);opacity:.2;position:absolute;top:0;left:0;z-index:-1}.help,main .wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}main .wrapper{-webkit-box-align:center;-ms-flex-align:center;align-items:center}main .wrapper .main__info{min-width:55%}main .wrapper .main__title{font-family:Galien;font-size:64px;line-height:74px;letter-spacing:.04em;color:#1f3f68;margin-bottom:32px}main .wrapper .main__subtitle{font-family:Gilroy;font-size:16px;line-height:26px;letter-spacing:.05em;color:#1f3f68;opacity:.6;margin-bottom:70px}main .wrapper .main__button{background:#5a98d0;-webkit-box-shadow:5px 10px 20px rgba(53,110,173,.2);box-shadow:5px 10px 20px rgba(53,110,173,.2);border-radius:10px;width:220px;height:56px;line-height:56px;color:#fff;text-align:center;cursor:pointer}.help{padding-top:192px}.help__title{color:#316099;font-size:36px;line-height:46px;letter-spacing:.05em;width:360px;margin-bottom:136px}.help-block{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end;width:380px;height:525px;background:#fff;-webkit-box-shadow:5px 20px 50px rgba(16,112,177,.2);box-shadow:5px 20px 50px rgba(16,112,177,.2);border-radius:10px;font-family:Gilroy;letter-spacing:.05em;padding:0 48px 48px;margin:0 50px 100px;-webkit-transition:.2s box-shadow ease-out;transition:.2s box-shadow ease-out}.help-block:hover{-webkit-box-shadow:5px 20px 100px rgba(16,112,177,.2);box-shadow:5px 20px 100px rgba(16,112,177,.2)}.help-block__img{padding-bottom:56px}.help-block__title{font-size:20px;line-height:30px;letter-spacing:.05em;color:#1f3f68;font-weight:900;padding-bottom:16px}.help-block__text{font-size:16px;line-height:26px;padding-bottom:30px}.help-block__more,.help-block__more i{-webkit-transition:.2s ease-in;transition:.2s ease-in}.help-block__more{color:#5a98d0;cursor:pointer;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.help-block__more i{line-height:26px;padding:0 0 0 18px;font-size:20px}.help-block__more:hover{opacity:.8}.help-block__more:hover i{padding-left:22px}.help__block1 img,.help__block2 img,.help__block3 img{position:absolute;left:44%;-webkit-transform:translate(-50%);transform:translate(-50%);top:48px}.help__block2 img,.help__block3 img{left:50%;top:-25px}.help__block3 img{left:45%;top:48px}.clients{background:#5a98d0;border-radius:200px 0 0 0;padding:96px 0 125px}.clients__header{display:-webkit-box;display:-ms-flexbox;display:flex;font-family:Gilroy;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:111px}.clients__subtitle,.clients__title{font-size:36px;line-height:46px;letter-spacing:.05em;color:#fff;width:230px}.clients__subtitle{font-size:16px;line-height:26px;opacity:.6;width:60%}.clients__logos{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative}.clients__border{width:100%;height:100%;border:1px solid #5a98d0;z-index:10;position:absolute}.clients__logo{position:relative;width:25%;height:100px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border:1px solid rgba(255,255,255,.5)}@media (max-width:768px){.clients__logo{width:50%}}.clients__logo svg{display:block;padding:0 0 0 35px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
