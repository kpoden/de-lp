"use strict";const sendMsgWrap=document.querySelector(".send-msg"),workBtn=document.querySelector(".work__button"),bg=document.querySelector(".popup__bg"),closeBtn=document.querySelector(".close"),sendMsgForm=document.querySelector(".send-msg__form"),sendMsgBtn=document.querySelector(".send-msg__btn"),sendMsgFields=document.querySelectorAll('.send-msg__form input[type="text"]'),sendMsgText=document.querySelector(".send-msg__msg");class Popup{constructor(e,s,t){this.popup=e,this.bg=s,this.btn=t,this.show.bind(this)}show(){this.popup.classList.add("active"),this.bg.classList.add("active"),document.body.style.overflow="hidden"}close(){sendMsgForm.reset();const e=document.querySelector("._err");e&&e.remove();const s=document.querySelector("._success");s&&s.remove(),sendMsgText.classList.remove("_req");for(let e=0;e<sendMsgFields.length;e++)sendMsgFields[e].classList.remove("_req");this.popup.classList.remove("active"),this.bg.classList.remove("active"),document.body.style.overflow="auto"}}class FormSend{constructor(e,s,t,n){this.form=e,this.submit=s,this.fields=t,this.text=n,this.form.addEventListener("submit",e=>{e.preventDefault(),this.validate(this.fields,this.text)})}err(){const e=document.createElement("div");e.classList.add("_err"),e.innerHTML="Please fill in all the required fields.",this.form.append(e)}success(){const e=document.createElement("div");e.classList.add("_success"),e.innerHTML="Your message has been sent successfully!",this.form.append(e)}validate(s,e){const t=document.querySelector("._err");t&&t.remove();const n=document.querySelector("._success");n&&n.remove(),e.classList.remove("_req");for(let e=0;e<s.length;e++)s[e].classList.remove("_req");let o=0;for(let e=0;e<s.length;e++)""===s[e].value&&(s[e].classList.add("_req"),o++);""===e.value&&(e.classList.add("_req"),o++),0<o?this.err():this.send()}async send(){let s={};for(let e=0;e<this.fields.length;e++){var t=this.fields[e];s[t.id]=t.value}s[this.text.id]=this.text.value,(await fetch("send-mail.php",{method:"POST",body:JSON.stringify(s),headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"}})).ok&&(this.success(),this.form.reset())}}let sendMsgPopup=new Popup(sendMsgWrap,bg,workBtn);workBtn.addEventListener("click",sendMsgPopup.show.bind(sendMsgPopup)),bg.addEventListener("click",sendMsgPopup.close.bind(sendMsgPopup)),closeBtn.addEventListener("click",sendMsgPopup.close.bind(sendMsgPopup));let sendMsg=new FormSend(sendMsgForm,sendMsgBtn,sendMsgFields,sendMsgText);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
